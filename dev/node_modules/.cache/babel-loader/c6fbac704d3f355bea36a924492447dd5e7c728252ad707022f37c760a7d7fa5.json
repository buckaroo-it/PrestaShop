{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"bg-gray-50 p-3 rounded\"\n};\nconst _hoisted_2 = {\n  class: \"text-center space-y-2\"\n};\nconst _hoisted_3 = {\n  class: \"flex justify-center\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"font-bold text-lg\"\n};\nconst _hoisted_6 = {\n  class: \"rounded-lg border border-gray-300 inline-block text-xs shadow text-center overflow-hidden p-1\"\n};\nconst _hoisted_7 = {\n  class: \"flex space-x-1\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: `/modules/buckaroo/views/images/payments/${$props.payment.icon}`,\n    alt: \"icon\",\n    class: \"w-12\"\n  }, null, 8, _hoisted_4)]), _createElementVNode(\"h3\", _hoisted_5, _toDisplayString(_ctx.$t(`payment_methods.${$props.payment.name}`)), 1), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    class: _normalizeClass([\"h-6 flex justify-center items-center rounded hover:bg-green-500 hover:text-white px-1 uppercase\", {\n      'shadow-xl bg-green-500 text-white': $props.payment.mode === 'live',\n      'shadow bg-gray-200 text-gray-400': $props.payment.mode !== 'live'\n    }]),\n    onClick: _cache[0] || (_cache[0] = $event => $props.payment.mode = 'live')\n  }, _toDisplayString(_ctx.$t(`dashboard.pages.payments.modes_settings.live`)), 3), _createElementVNode(\"button\", {\n    class: _normalizeClass([\"h-6 flex justify-center items-center rounded hover:bg-yellow-500 hover:text-white px-1 uppercase\", {\n      'shadow-xl bg-yellow-500 text-white': $props.payment.mode === 'test',\n      'shadow bg-gray-200 text-gray-400': $props.payment.mode !== 'test'\n    }]),\n    onClick: _cache[1] || (_cache[1] = $event => $props.payment.mode = 'test')\n  }, _toDisplayString(_ctx.$t(`dashboard.pages.payments.modes_settings.test`)), 3), _createElementVNode(\"button\", {\n    class: _normalizeClass([\"h-6 flex justify-center items-center rounded hover:bg-black hover:text-white px-1 uppercase\", {\n      'shadow-xl bg-black text-white': $props.payment.mode === 'off',\n      'shadow bg-gray-200 text-gray-400': $props.payment.mode !== 'off'\n    }]),\n    onClick: _cache[2] || (_cache[2] = $event => $props.payment.mode = 'off')\n  }, _toDisplayString(_ctx.$t(`dashboard.pages.payments.modes_settings.off`)), 3)])]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.$emit('selectPayment')),\n    class: \"inline-block py-1 px-3 text-xs hover:font-bold\"\n  }, _toDisplayString(_ctx.$t(`dashboard.pages.payments.configure`)), 1)])])])]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}