{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"client-side-mode\",\n  class: \"font-semibold text-sm\"\n}, \" Client Side \"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-gray-400 text-xs\"\n}, \"Enable or disable client sided payment method behavior.\")], -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ToggleField = _resolveComponent(\"ToggleField\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_ToggleField, {\n    class: \"p-5 space-y-5\",\n    modelValue: $setup.config.isEncrypted,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.config.isEncrypted = $event)\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n  }, 8, [\"modelValue\"])]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}