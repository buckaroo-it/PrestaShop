{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  for: \"seperateAuthorizeAndCapture\",\n  class: \"font-semibold text-sm\"\n};\nconst _hoisted_2 = {\n  class: \"text-gray-400 text-xs\"\n};\nconst _hoisted_3 = {\n  for: \"client-side-mode\",\n  class: \"font-semibold text-sm\"\n};\nconst _hoisted_4 = {\n  class: \"text-gray-400 text-xs\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ToggleField = _resolveComponent(\"ToggleField\");\n  const _component_ActiveCreditcards = _resolveComponent(\"ActiveCreditcards\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_ToggleField, {\n    class: \"p-5 space-y-5\",\n    modelValue: $setup.config.seperateAuthorizeAndCapture,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.config.seperateAuthorizeAndCapture = $event),\n    id: \"seperateAuthorizeAndCapture\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_1, _toDisplayString(_ctx.$t(`dashboard.pages.payments.seperate_authorize_and_capture`)), 1), _createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.$t(`dashboard.pages.payments.seperate_authorize_and_capture_label`)), 1)])]),\n    _: 1\n  }, 8, [\"modelValue\"]), _createVNode(_component_ToggleField, {\n    class: \"p-5 space-y-5\",\n    modelValue: $setup.config.isEncrypted,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.config.isEncrypted = $event)\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", null, [_createElementVNode(\"label\", _hoisted_3, _toDisplayString(_ctx.$t(`dashboard.pages.payments.client_side`)), 1), _createElementVNode(\"div\", _hoisted_4, _toDisplayString(_ctx.$t(`dashboard.pages.payments.client_side_label`)), 1)])]),\n    _: 1\n  }, 8, [\"modelValue\"]), _createVNode(_component_ActiveCreditcards, {\n    modelValue: $setup.config.activeCreditcards,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.config.activeCreditcards = $event)\n  }, null, 8, [\"modelValue\"])]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}