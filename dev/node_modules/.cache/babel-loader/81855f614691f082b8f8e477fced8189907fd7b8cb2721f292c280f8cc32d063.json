{"ast":null,"code":"import { inject, ref, watch } from \"vue\";\nimport { useApi } from \"../lib/api\";\nimport { useToastr } from \"../lib/toastr\";\nexport default {\n  props: ['payment'],\n  watch: {\n    'payment.mode'({\n      mode: value\n    }) {\n      this.post(this.payment).then(() => {\n        if (this.data.status) {\n          this.toastr.success(`Payment updated.`);\n        }\n      }).catch(e => {\n        this.toastr.error(`Something went wrong...`);\n      });\n    },\n    selectedChannel(value) {\n      this.setEndpoint(`channel/1/payment/${this.$props.payment.name}/config/mode`);\n    }\n  },\n  setup(props) {\n    const {\n      toastr\n    } = useToastr();\n    const {\n      post,\n      data,\n      loading,\n      setEndpoint\n    } = useApi(`channel/1/payment/${props.payment.name}/config/mode`);\n    const paymentState = ref(props.payment.config ? props.payment.config.value.enabled ?? 0 : 0);\n    return {\n      toastr,\n      loading,\n      post,\n      data,\n      paymentState,\n      setEndpoint\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}